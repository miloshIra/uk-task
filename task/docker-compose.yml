version: "3.9"

services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: psql_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-psql_db}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pass}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-psql_db}"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    build:
      context: .
      dockerfile: Dockerfile.redis
    container_name: app_redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10

  web:
    build:
      context: .
      dockerfile: Dockerfile.django
    container_name: app_web
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-task.settings}
      SECRET_KEY: ${SECRET_KEY:-change-me}
      DEBUG: ${DEBUG:-True}

      POSTGRES_DB: ${POSTGRES_DB:-psql_db}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pass}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      DATABASE_URL: ${DATABASE_URL:-postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-pass}@db:5432/${POSTGRES_DB:-psql_db}}

      REDIS_URL: ${REDIS_URL:-redis://redis:6379/1}
    ports:
      - "8000:8000"
    volumes:
      - .:/app

volumes:
  pgdata:
  redisdata:
